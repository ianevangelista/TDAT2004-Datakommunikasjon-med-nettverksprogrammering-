{"ast":null,"code":"var _jsxFileName = \"/Users/ianevangelista/OneDrive - NTNU/Dataingeni\\xF8r/2. klasse/2.semester/DatKom/Nettverksprogrammering/\\xD8vinger/react-docker-app/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Typography, TextField, Grid } from \"@material-ui/core\";\n\nconst App = () => {\n  const [input, setInput] = useState(\"\");\n  const [output, setOutput] = useState(\"\");\n  useEffect(() => {\n    var rawFile = new XMLHttpRequest();\n    rawFile.open(\"GET\", \"./defaultCode/Code.java\", false);\n\n    rawFile.onreadystatechange = function () {\n      if (rawFile.readyState === 4) {\n        if (rawFile.status === 200 || rawFile.status === 0) {\n          var allText = rawFile.responseText;\n          setInput(allText);\n        }\n      }\n    };\n\n    rawFile.send(null);\n  }, []);\n\n  const submit = () => {\n    fetch(\"http://localhost:8080/java\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        code: input\n      })\n    }).then(response => {\n      console.log(response);\n      return response.json();\n    }).then(data => {\n      setOutput(data.output);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"h1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"\\xD8ving 3 - online kompilator\"), React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"input\",\n    label: \"Kode\",\n    multiline: true,\n    rows: \"10\",\n    variant: \"outlined\",\n    fullWidth: true,\n    value: input,\n    onChange: e => setInput(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    onClick: submit,\n    style: {\n      margin: \"20px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Kompiler\")), React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"output\",\n    label: \"Output\",\n    multiline: true,\n    rows: \"4\",\n    variant: \"outlined\",\n    fullWidth: true,\n    value: output,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/ianevangelista/OneDrive - NTNU/Dataingeniør/2. klasse/2.semester/DatKom/Nettverksprogrammering/Øvinger/react-docker-app/src/App.js"],"names":["React","useEffect","useState","Button","Typography","TextField","Grid","App","input","setInput","output","setOutput","rawFile","XMLHttpRequest","open","onreadystatechange","readyState","status","allText","responseText","send","submit","fetch","method","headers","body","JSON","stringify","code","then","response","console","log","json","data","e","target","value","margin"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, Typography, TextField, Grid } from \"@material-ui/core\";\n\nconst App = () => {\n  const [input, setInput] = useState(\"\");\n  const [output, setOutput] = useState(\"\");\n\n  useEffect(() => {\n    var rawFile = new XMLHttpRequest();\n    rawFile.open(\"GET\", \"./defaultCode/Code.java\", false);\n    rawFile.onreadystatechange = function() {\n      if (rawFile.readyState === 4) {\n        if (rawFile.status === 200 || rawFile.status === 0) {\n          var allText = rawFile.responseText;\n          setInput(allText);\n        }\n      }\n    };\n    rawFile.send(null);\n  }, []);\n\n  const submit = () => {\n    fetch(\"http://localhost:8080/java\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        code: input\n      })\n    })\n      .then(response => {\n        console.log(response);\n        return response.json();\n      })\n      .then(data => {\n        setOutput(data.output);\n      });\n  };\n\n  return (\n    <div className=\"App\">\n      <Grid></Grid>\n      <Typography variant=\"h1\">Øving 3 - online kompilator</Typography>\n      <Grid container direction=\"row\" justify=\"center\">\n        <TextField\n          id=\"input\"\n          label=\"Kode\"\n          multiline\n          rows=\"10\"\n          variant=\"outlined\"\n          fullWidth\n          value={input}\n          onChange={e => setInput(e.target.value)}\n        />\n      </Grid>\n      <Grid container direction=\"row\" justify=\"center\">\n        <Button variant=\"contained\" onClick={submit} style={{ margin: \"20px\" }}>\n          Kompiler\n        </Button>\n      </Grid>\n      <Grid container direction=\"row\" justify=\"center\">\n        <TextField\n          id=\"output\"\n          label=\"Output\"\n          multiline\n          rows=\"4\"\n          variant=\"outlined\"\n          fullWidth\n          value={output}\n        />\n      </Grid>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}